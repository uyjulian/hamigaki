# Jamfile for an action game of the prototype

# Copyright Takeshi Mouri 2007, 2008.
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

# See http://hamigaki.sourceforge.jp/ for library home page.

import os ;
import exec ;
import string ;

if [ os.name ] = NT
{

local gtk-root = [ modules.peek : GTK_ROOT ] ;
local gtk-inc = $(gtk-root)/include ;
local gtk-lib = $(gtk-root)/lib $(gtk-root)/bin ;

lib gtk-win32-2.0 : : <search>$(gtk-lib) ;
lib gdk-win32-2.0 : : <search>$(gtk-lib) ;
lib gdi32 imm32 shell32 ole32 ;
lib atk-1.0 : : <search>$(gtk-lib) ;
lib gdk_pixbuf-2.0 : : <search>$(gtk-lib) ;
lib pangowin32-1.0 : : <search>$(gtk-lib) ;
lib pangocairo-1.0 : : <search>$(gtk-lib) ;
lib pango-1.0 : : <search>$(gtk-lib) ;
lib cairo : : <search>$(gtk-lib) ;
lib gobject-2.0 : : <search>$(gtk-lib) ;
lib gmodule-2.0 : : <search>$(gtk-lib) ;
lib glib-2.0 : : <search>$(gtk-lib) ;
lib intl : : <search>$(gtk-lib) ;
lib iconv : : <search>$(gtk-lib) ;


alias gtk
    :
    gtk-win32-2.0
    gdk-win32-2.0
    gdi32
    imm32
    shell32
    ole32
    atk-1.0
    gdk_pixbuf-2.0
    pangowin32-1.0
    pangocairo-1.0
    pango-1.0
    cairo
    gobject-2.0
    gmodule-2.0
    glib-2.0
    intl
    iconv
    :
    :
    :
    <include>$(gtk-inc)/gtk-2.0
    <include>$(gtk-lib)/gtk-2.0/include
    <include>$(gtk-inc)/atk-1.0
    <include>$(gtk-inc)/cairo
    <include>$(gtk-inc)/pango-1.0
    <include>$(gtk-inc)/glib-2.0
    <include>$(gtk-lib)/glib-2.0/include
    <toolset>gcc:<cxxflags>-mms-bitfields
    ;

lib opengl32 ;
lib user32 ;

alias open-gl : opengl32 user32 ;

}
else
{

local gtk-cflags = [ SHELL "pkg-config --cflags gtk+-2.0" ] ;
gtk-cflags = [ string.words $(gtk-cflags) ] ;

local gtk-ldflags = [ SHELL "pkg-config --libs gtk+-2.0" ] ;
gtk-ldflags = [ string.words $(gtk-ldflags) ] ;

alias gtk
    :
    :
    :
    :
    <cflags>$(gtk-cflags)
    <cxxflags>$(gtk-cflags)
    <linkflags>$(gtk-ldflags)
    ;

lib GL ;

alias open-gl : GL ;

}

exe action_game
    :
    action_game.cpp
    blink_effect.cpp
    bounce_routine.cpp
    character_repository.cpp
    collision_utility.cpp
    fire_man_routine.cpp
    game_character.cpp
    game_project_io.cpp
    knock_back_routine.cpp
    hop_routine.cpp
    hop_step_jump_routine.cpp
    input_engine.cpp
    item_box_routine.cpp
    lift_routine.cpp
    main_window.cpp
    main_window_impl.cpp
    player_routine.cpp
    png_reader.cpp
    pipe_routine.cpp
    pop_up_routine.cpp
    render_context.cpp
    side_scrolling_routine.cpp
    sound_engine.cpp
    sprite_info.cpp
    sprite_info_cache.cpp
    stage_map_load.cpp
    texture.cpp
    texture_cache.cpp
    transfer_info.cpp
    turn_routine.cpp
    vanish_routine.cpp
    velocity_routine.cpp
    wait_se_routine.cpp
    gtk
    open-gl
    /boost-lib//boost_filesystem
    /boost-lib//boost_iostreams
    /boost-lib//boost_serialization
    /boost-lib//boost_thread
    /hamigaki/audio//hamigaki_audio
    /hamigaki/png//hamigaki_png
    :
    <threading>multi
    <define>NOMINMAX=1
    <os>LINUX:<source>linux_joystick.cpp
    ;

exec.register-exec-all ;
alias run : action_game-run ;
explicit run ;

install dist-bin
    :
    action_game
    :
    <install-type>EXE
    <location>../../dist/bin
    ;

explicit dist-bin ;
