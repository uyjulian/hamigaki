# simple testing tool

# Copyright Takeshi Mouri 2007, 2008.
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

# See http://hamigaki.sourceforge.jp/ for library home page.

import generators ;
import testing ;
import toolset ;
import type ;

type.register EXEC : exec : TEST ;

# Make a target to execute.
#
rule exec ( target-name : sources * : requirements * : default-build * )
{
    # localize testing.make-test for "--dump-test"
    import project ;
    import regex ;
    import targets ;
    IMPORT testing : make-test : $(__name__) : make-test : LOCALIZE ;

    local t = [ make-test exec : $(sources) : $(requirements) : $(target-name) ] ;

    # EXEC targets are always explicit
    local ptarget = [ $(t).project ] ;
    $(ptarget).mark-target-as-explicit $(target-name) ;

    return $(t) ;
}

generators.register-standard exec.exec-main : EXE : EXEC ;

rule exec-main ( target : source : properties * )
{
    testing.run-path-setup $(target) : $(source) : $(properties) ;
}

local argv = [ modules.peek : ARGV ] ;
DEBUGGER = [ MATCH ^--debugger=(.*)$ : $(argv) ] ;
ARGS = [ MATCH ^--args=(.*)$ : $(argv) ] ;

SET_STATUS = [ modules.peek testing : SET_STATUS ] ;
RUN_OUTPUT_NL = [ modules.peek testing : RUN_OUTPUT_NL ] ;
STATUS = [ modules.peek testing : STATUS ] ;

actions exec-main
{
    $(PATH_SETUP)
    $(DEBUGGER) "$(>)" $(ARGS)
    $(SET_STATUS)
    $(RUN_OUTPUT_NL)
    echo EXIT STATUS: $(STATUS)
    exit $(STATUS)
}

IMPORT $(__name__) : exec : : exec ;


# Make EXEC targets for all EXE targets.
#
rule register-exec-all ( )
{
    import "class" ;
    import project ;

    local proj = [ project.current ] ;
    local targets = [ modules.peek $(proj) : self.alternatives ] ;

    for t in $(targets)
    {
        if [ class.is-a $(t) : typed-target ] && [ $(t).type ] = EXE
        {
            local name = [ $(t).name ] ;
            exec $(name)-run : $(name) ;
        }
    }
}
