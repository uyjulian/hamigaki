<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE header PUBLIC "-//Boost//DTD BoostBook XML V1.0//EN"
  "http://www.boost.org/tools/boostbook/dtd/boostbook.dtd">
<!--
  Hamigaki.Process Library Document Source

  Copyright Takeshi Mouri 2006, 2007.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt)

  See http://hamigaki.sourceforge.jp/libs/process for library home page.
-->
<header name="hamigaki/process/pipe_device.hpp">
  <namespace name="hamigaki">
    <namespace name="process">
      <typedef name="handle_type">
        <type><emphasis>implementation defined</emphasis></type>
      </typedef>

      <class name="pipe_source">
        <purpose>
          <simpara>パイプに対する読み込み専用アクセスを提供するSourceモデル</simpara>
        </purpose>

        <description>
          <para>モデルとなるコンセプト:<simplelist type='inline'>
              <member><conceptname>Source</conceptname></member>
              <member><conceptname>ClosableDevice</conceptname></member>
          </simplelist></para>
        </description>

        <typedef name="char_type">
          <type>char</type>
        </typedef>

        <constructor/>

        <constructor specifiers="explicit">
          <parameter name="h">
            <paramtype>handle_type</paramtype>
          </parameter>

          <parameter name="close_on_exit">
            <paramtype>bool</paramtype>
            <default>false</default>
          </parameter>
        </constructor>

        <method-group name="Boost.Iostreams implementation">
          <method name="is_open" cv="const">
            <type>bool</type>
          </method>

          <method name="read">
            <type>std::streamsize</type>
            <parameter name="s">
              <paramtype>char*</paramtype>
            </parameter>
            <parameter name="n">
              <paramtype>std::streamsize</paramtype>
            </parameter>
          </method>

          <method name="close">
            <type>void</type>
          </method>
        </method-group>
      </class>

      <class name="pipe_sink">
        <purpose>
          <simpara>パイプに対する書き込み専用アクセスを提供するSinkモデル</simpara>
        </purpose>

        <description>
          <para>モデルとなるコンセプト:<simplelist type='inline'>
              <member><conceptname>Sink</conceptname></member>
              <member><conceptname>ClosableDevice</conceptname></member>
          </simplelist></para>
        </description>

        <typedef name="char_type">
          <type>char</type>
        </typedef>

        <constructor/>

        <constructor specifiers="explicit">
          <parameter name="h">
            <paramtype>handle_type</paramtype>
          </parameter>

          <parameter name="close_on_exit">
            <paramtype>bool</paramtype>
            <default>false</default>
          </parameter>
        </constructor>

        <method-group name="Boost.Iostreams implementation">
          <method name="is_open" cv="const">
            <type>bool</type>
          </method>

          <method name="write">
            <type>std::streamsize</type>
            <parameter name="s">
              <paramtype>const char*</paramtype>
            </parameter>
            <parameter name="n">
              <paramtype>std::streamsize</paramtype>
            </parameter>
          </method>

          <method name="close">
            <type>void</type>
          </method>
        </method-group>
      </class>
    </namespace>
  </namespace>
</header>
